{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4981b6d9",
   "metadata": {},
   "outputs": [],
   "source": [
    "import io\n",
    "import os\n",
    "import sys\n",
    "import multiprocessing\n",
    "from queue import Queue\n",
    "import time\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import scipy as sp\n",
    "import statsmodels.api as sm\n",
    "import random\n",
    "from collections import Counter\n",
    "import csv\n",
    "import gzip\n",
    "import matplotlib.colors as mcolors\n",
    "from scipy.stats import poisson\n",
    "import itertools\n",
    "import collections\n",
    "import scipy\n",
    "from scipy.stats import chi2\n",
    "from scipy.stats import friedmanchisquare\n",
    "from scipy.stats import studentized_range"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "209bd3e6",
   "metadata": {},
   "outputs": [],
   "source": [
    "def parse_vcf(file, q = None):\n",
    "    with io.TextIOWrapper(gzip.open(file,'r')) as f:\n",
    "        lines =[l for l in f if not l.startswith('##')]\n",
    "        # Identify columns name line and save it into a dict\n",
    "        # with values as dtype\n",
    "        dynamic_header_as_key = []\n",
    "        for liness in f:\n",
    "            if liness.startswith(\"#CHROM\"):\n",
    "                dynamic_header_as_key.append(liness)\n",
    "                # Declare dtypes\n",
    "        values = [str,int,str,str,str,int,str,str,str,str]\n",
    "        columns2detype = dict(zip(dynamic_header_as_key,values))\n",
    "\n",
    "        df = pd.read_csv(\n",
    "            io.StringIO(''.join(lines)),\n",
    "            dtype=columns2detype,\n",
    "            sep='\\t'\n",
    "        ).rename(columns={'#CHROM':'CHROM'})\n",
    "#     if q is None:\n",
    "#         return df\n",
    "#     else:\n",
    "#     return df\n",
    "    q.put(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "fb7fbc30",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CHROM\n",
      "CHROM\n",
      "CHROM\n",
      "CHROMCHROM\n",
      "\n",
      "CHROM\n",
      "CHROMCHROM\n",
      "\n",
      "CHROMCHROM\n",
      "\n",
      "CHROM\n",
      "CHROM\n",
      "CHROMCHROMCHROM\n",
      "\n",
      "\n",
      "CHROMCHROMCHROM\n",
      "\n",
      "CHROM\n",
      "CHROM\n",
      "\n",
      "CHROM\n",
      "CHROM\n",
      "16.68485999107361\n",
      "Completed with  0\n"
     ]
    }
   ],
   "source": [
    "q = Queue()\n",
    "processes = []\n",
    "chromosome = [i for i in range(1,23)]\n",
    "start = time.time()\n",
    "\n",
    "for i in chromosome:\n",
    "    tmp = multiprocessing.Process(target = parse_vcf, args = ('../../GAMCC_oneKG/test.vcf.gz', q))\n",
    "    tmp.start()\n",
    "    processes.append(tmp)\n",
    "for i in chromosome:\n",
    "    processes[i-1].join()\n",
    "\n",
    "results = []\n",
    "\n",
    "while not q.empty():\n",
    "    results.append(q.get())\n",
    "\n",
    "end = time.time()\n",
    "print(end - start)\n",
    "print('Completed with ', len(results))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "63f72a82",
   "metadata": {},
   "outputs": [],
   "source": [
    "from multiprocessing import Manager\n",
    "manager = Manager()\n",
    "q = manager.Queue()\n",
    "\n",
    "# Create a process\n",
    "tmp = multiprocessing.Process(target=parse_vcf, args=('../../GAMCC_oneKG/test.vcf.gz', q))\n",
    "\n",
    "# Start the process\n",
    "tmp.start()\n",
    "\n",
    "# Wait for the process to finish\n",
    "tmp.join()\n",
    "\n",
    "# Retrieve the result from the queue\n",
    "result_df = q.get()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "f285f3e2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CHROM</th>\n",
       "      <th>POS</th>\n",
       "      <th>ID</th>\n",
       "      <th>REF</th>\n",
       "      <th>ALT</th>\n",
       "      <th>QUAL</th>\n",
       "      <th>FILTER</th>\n",
       "      <th>INFO</th>\n",
       "      <th>FORMAT</th>\n",
       "      <th>GM8</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>chr21</td>\n",
       "      <td>5030578</td>\n",
       "      <td>.</td>\n",
       "      <td>C</td>\n",
       "      <td>T</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.0162;INFO_SCORE=0.24521;HWE=1;ERC=3.0517...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.994,0.006,0:0.006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>chr21</td>\n",
       "      <td>5030588</td>\n",
       "      <td>.</td>\n",
       "      <td>T</td>\n",
       "      <td>C</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.01022;INFO_SCORE=0.07993;HWE=1;ERC=0.064...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.997,0.003,0:0.003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>chr21</td>\n",
       "      <td>5030596</td>\n",
       "      <td>.</td>\n",
       "      <td>A</td>\n",
       "      <td>G</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.00113;INFO_SCORE=1;HWE=1;ERC=0.07018;EAC...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.998,0.002,0:0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>chr21</td>\n",
       "      <td>5030641</td>\n",
       "      <td>.</td>\n",
       "      <td>C</td>\n",
       "      <td>T</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.001;INFO_SCORE=1;HWE=1;ERC=0.06959;EAC=1...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.998,0.002,0:0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>chr21</td>\n",
       "      <td>5030673</td>\n",
       "      <td>.</td>\n",
       "      <td>G</td>\n",
       "      <td>A</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.00111;INFO_SCORE=1;HWE=1;ERC=0.07118;EAC...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.998,0.002,0:0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>867630</th>\n",
       "      <td>chr21</td>\n",
       "      <td>46699909</td>\n",
       "      <td>.</td>\n",
       "      <td>A</td>\n",
       "      <td>G</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.01364;INFO_SCORE=0.36453;HWE=1;ERC=4.155...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.998,0.002,0:0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>867631</th>\n",
       "      <td>chr21</td>\n",
       "      <td>46699915</td>\n",
       "      <td>.</td>\n",
       "      <td>A</td>\n",
       "      <td>G</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.00589;INFO_SCORE=0.42467;HWE=1;ERC=4.118...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.998,0.002,0:0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>867632</th>\n",
       "      <td>chr21</td>\n",
       "      <td>46699921</td>\n",
       "      <td>.</td>\n",
       "      <td>A</td>\n",
       "      <td>G</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.00262;INFO_SCORE=1;HWE=1;ERC=3.13782;EAC...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.998,0.002,0:0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>867633</th>\n",
       "      <td>chr21</td>\n",
       "      <td>46699925</td>\n",
       "      <td>.</td>\n",
       "      <td>T</td>\n",
       "      <td>G</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.00109;INFO_SCORE=1;HWE=1;ERC=1.14205;EAC...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.998,0.002,0:0.002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>867634</th>\n",
       "      <td>chr21</td>\n",
       "      <td>46699927</td>\n",
       "      <td>.</td>\n",
       "      <td>A</td>\n",
       "      <td>G</td>\n",
       "      <td>.</td>\n",
       "      <td>PASS</td>\n",
       "      <td>EAF=0.00105;INFO_SCORE=1;HWE=1;ERC=4.11108;EAC...</td>\n",
       "      <td>GT:GP:DS</td>\n",
       "      <td>0|0:0.998,0.002,0:0.002</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>867635 rows Ã— 10 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        CHROM       POS ID REF ALT QUAL FILTER  \\\n",
       "0       chr21   5030578  .   C   T    .   PASS   \n",
       "1       chr21   5030588  .   T   C    .   PASS   \n",
       "2       chr21   5030596  .   A   G    .   PASS   \n",
       "3       chr21   5030641  .   C   T    .   PASS   \n",
       "4       chr21   5030673  .   G   A    .   PASS   \n",
       "...       ...       ... ..  ..  ..  ...    ...   \n",
       "867630  chr21  46699909  .   A   G    .   PASS   \n",
       "867631  chr21  46699915  .   A   G    .   PASS   \n",
       "867632  chr21  46699921  .   A   G    .   PASS   \n",
       "867633  chr21  46699925  .   T   G    .   PASS   \n",
       "867634  chr21  46699927  .   A   G    .   PASS   \n",
       "\n",
       "                                                     INFO    FORMAT  \\\n",
       "0       EAF=0.0162;INFO_SCORE=0.24521;HWE=1;ERC=3.0517...  GT:GP:DS   \n",
       "1       EAF=0.01022;INFO_SCORE=0.07993;HWE=1;ERC=0.064...  GT:GP:DS   \n",
       "2       EAF=0.00113;INFO_SCORE=1;HWE=1;ERC=0.07018;EAC...  GT:GP:DS   \n",
       "3       EAF=0.001;INFO_SCORE=1;HWE=1;ERC=0.06959;EAC=1...  GT:GP:DS   \n",
       "4       EAF=0.00111;INFO_SCORE=1;HWE=1;ERC=0.07118;EAC...  GT:GP:DS   \n",
       "...                                                   ...       ...   \n",
       "867630  EAF=0.01364;INFO_SCORE=0.36453;HWE=1;ERC=4.155...  GT:GP:DS   \n",
       "867631  EAF=0.00589;INFO_SCORE=0.42467;HWE=1;ERC=4.118...  GT:GP:DS   \n",
       "867632  EAF=0.00262;INFO_SCORE=1;HWE=1;ERC=3.13782;EAC...  GT:GP:DS   \n",
       "867633  EAF=0.00109;INFO_SCORE=1;HWE=1;ERC=1.14205;EAC...  GT:GP:DS   \n",
       "867634  EAF=0.00105;INFO_SCORE=1;HWE=1;ERC=4.11108;EAC...  GT:GP:DS   \n",
       "\n",
       "                            GM8  \n",
       "0       0|0:0.994,0.006,0:0.006  \n",
       "1       0|0:0.997,0.003,0:0.003  \n",
       "2       0|0:0.998,0.002,0:0.002  \n",
       "3       0|0:0.998,0.002,0:0.002  \n",
       "4       0|0:0.998,0.002,0:0.002  \n",
       "...                         ...  \n",
       "867630  0|0:0.998,0.002,0:0.002  \n",
       "867631  0|0:0.998,0.002,0:0.002  \n",
       "867632  0|0:0.998,0.002,0:0.002  \n",
       "867633  0|0:0.998,0.002,0:0.002  \n",
       "867634  0|0:0.998,0.002,0:0.002  \n",
       "\n",
       "[867635 rows x 10 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "result_df"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
